import org.gradle.api.artifacts.maven.MavenDeployment

plugins {
    id "com.jfrog.artifactory" version "4.4.0"
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'idea'

archivesBaseName = 'procyon'

ext.getProcyonVersion = { ->
    final def fallbackVersion = "1.0-SNAPSHOT";
    final def versionFilePath = rootDir.canonicalPath + "/Procyon.Core/src/main/java/com/strobel/Procyon.java";
    final def versionFile = new File(versionFilePath);

    if (versionFile.exists()) {
        try {
            final def String fileContents = new File(versionFilePath).getText('UTF-8')
            final def matcher = fileContents =~ /VERSION\s*=\s*"([^"]+)"/

            if (matcher.find()) {
                return matcher.group(1).trim()
            }
        }
        catch (final Throwable ignored) {
        }
    }

    logger.warn("wARNING: Could not resolve version from source; falling back to '$fallbackVersion'.")

    return fallbackVersion
}

def results = [];
final def procyonVersion = getProcyonVersion()

allprojects {
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'maven'

    buildDir = rootDir.canonicalPath + "/build/" + rootProject.relativePath(projectDir.canonicalPath)

    version procyonVersion

    group 'org.bitbucket.mstrobel'
    sourceCompatibility = 1.7    // JDK version

    repositories {
        mavenCentral()
    }

    dependencies {
        testCompile 'junit:junit:4.11'
    }
}

artifactoryPublish.skip = true

//
// The root project is empty and doesn't need any tasks.
//
rootProject.tasks.each { it.enabled = false }

subprojects {
    apply plugin: 'maven'

    archivesBaseName = 'procyon-' + it.name.split("\\.")[1].toLowerCase()

    jar {
        metaInf {
            from 'License.txt'
            from 'README.md'
        }
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifactoryPublish.skip = true
    if (project.name != "Procyon.Decompiler") {
        artifactoryPublish.skip = false
        javadoc {
            options.encoding = 'UTF-8'
        }

        results += jar;
        results += javadocJar;
        results += sourcesJar;

        artifacts {
            archives jar
            archives javadocJar
            archives sourcesJar
        }

        artifactory {
            contextUrl = 'http://mvn.rx14.co.uk/'
            publish {
                repository {
                    repoKey = 'local' // The Artifactory repository key to publish to
                    username = "${artifactory_user}" // The publisher user name
                    password = "${artifactory_password}" // The publisher password
                    // This is an optional section for configuring Ivy publication (when publishIvy = true).
                    ivy {
                        ivyLayout = '[organization]/[module]/ivy-[revision].xml'
                        artifactLayout = '[organization]/[module]/[revision]/[module]-[revision](-[classifier]).[ext]'
                        mavenCompatible = true //Convert any dots in an [organization] layout value to path separators, similar to Maven's groupId-to-path conversion. True if not specified
                    }
                }
                defaults {
                    publishConfigs('archives')
                    publishPom = true // Publish generated POM files to Artifactory (true by default)
                    publishIvy = false // Publish generated Ivy descriptor files to Artifactory (true by default)
                }
            }
            resolve {
                repoKey = 'jcenter'
            }
        }
    }
}
